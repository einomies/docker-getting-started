Start an app container

Now that we have an image, let’s run the application! To do so, we will use the docker run command (remember that from earlier?).

Start your container using the docker run command and specify the name of the image we just created:

docker run -dp 3000:3000 getting-started

Remember the -d and -p flags? We’re running the new container in “detached” mode (in the background) and creating a mapping between the host’s port 3000 to the container’s port 3000. Without the port mapping, we wouldn’t be able to access the application.

After a few seconds, open your web browser to http://localhost:3000. You should see our app!

Empty Todo List

Go ahead and add an item or two and see that it works as you expect. You can mark items as complete and remove items. Your frontend is successfully storing items in the backend! Pretty quick and easy, huh?

At this point, you should have a running todo list manager with a few items, all built by you! Now, let’s make a few changes and learn about managing our containers.

If you take a quick look at the Docker Dashboard, you should see your two containers running now (this tutorial and your freshly launched app container)!

****************************************************************************************************************************************************

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker container ls
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>
E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker container ls -a
CONTAINER ID   IMAGE               COMMAND                  CREATED       STATUS                      PORTS                                  NAMES
678f6c2541f9   mongo               "docker-entrypoint.s…"   13 days ago   Exited (255) 19 hours ago   0.0.0.0:27017-27019->27017-27019/tcp   mongodb
1888c7d7ff05   docker101tutorial   "/docker-entrypoint.…"   4 weeks ago   Exited (255) 4 weeks ago    0.0.0.0:80->80/tcp                     docker-tutorial
ce5d54893c11   alpine/git          "git clone https://g…"   4 weeks ago   Exited (0) 4 weeks ago                                             repo

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>
E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker run -dp 3000:3000 getting-started
282520431fc789974a9b471638d9b86ecbae692777e8472a1c79beaf5af7a387

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker container ls -a
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS                      PORTS                                  NAMES
282520431fc7   getting-started     "docker-entrypoint.s…"   5 seconds ago   Up 3 seconds                0.0.0.0:3000->3000/tcp                 cranky_benz
678f6c2541f9   mongo               "docker-entrypoint.s…"   13 days ago     Exited (255) 23 hours ago   0.0.0.0:27017-27019->27017-27019/tcp   mongodb
1888c7d7ff05   docker101tutorial   "/docker-entrypoint.…"   4 weeks ago     Exited (255) 4 weeks ago    0.0.0.0:80->80/tcp                     docker-tutorial
ce5d54893c11   alpine/git          "git clone https://g…"   4 weeks ago     Exited (0) 4 weeks ago                                             repo

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>

****************************************************************************************************************************************************

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker --version
Docker version 20.10.5, build 55c4c88

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>hostnamectl
'hostnamectl' is not recognized as an internal or external command,
operable program or batch file.

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker status
docker: 'status' is not a docker command.
See 'docker --help'

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker ps
CONTAINER ID   IMAGE             COMMAND                  CREATED       STATUS       PORTS                    NAMES
282520431fc7   getting-started   "docker-entrypoint.s…"   2 hours ago   Up 2 hours   0.0.0.0:3000->3000/tcp   cranky_benz

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker ps -a
CONTAINER ID   IMAGE               COMMAND                  CREATED       STATUS                      PORTS                                  NAMES
282520431fc7   getting-started     "docker-entrypoint.s…"   2 hours ago   Up 2 hours                  0.0.0.0:3000->3000/tcp                 cranky_benz
678f6c2541f9   mongo               "docker-entrypoint.s…"   13 days ago   Exited (255) 24 hours ago   0.0.0.0:27017-27019->27017-27019/tcp   mongodb
1888c7d7ff05   docker101tutorial   "/docker-entrypoint.…"   4 weeks ago   Exited (255) 4 weeks ago    0.0.0.0:80->80/tcp                     docker-tutorial
ce5d54893c11   alpine/git          "git clone https://g…"   4 weeks ago   Exited (0) 4 weeks ago                                             repo

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker images
REPOSITORY                     TAG       IMAGE ID       CREATED       SIZE
getting-started                latest    063dc5cd2597   6 hours ago   492MB
mongo                          latest    f03be0dc25f8   2 weeks ago   448MB
einomies26/docker101tutorial   latest    875151a54fc7   4 weeks ago   27.9MB
docker101tutorial              latest    875151a54fc7   4 weeks ago   27.9MB
hello-world                    latest    d1165f221234   5 weeks ago   13.3kB
alpine/git                     latest    a939554ad0d0   7 weeks ago   25.1MB

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker exec -it 2825 /bin/bash
OCI runtime exec failed: exec failed: container_linux.go:370: starting container process caused: exec: "/bin/bash": stat /bin/bash: no such file or directory: unknown

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker exec -it 2825
"docker exec" requires at least 2 arguments.
See 'docker exec --help'.

Usage:  docker exec [OPTIONS] CONTAINER COMMAND [ARG...]

Run a command in a running container

E:\workspaces\opinnot-2021-JAMK\YTSP0100 Modern Software Development\Docker\docker-getting-started\app>docker exec -it 2825 /bin/sh
/app #
/app # ls -l
total 452
-rwxr-xr-x    1 root     root           146 Apr 10 11:39 Dockerfile
drwxr-xr-x    2 root     root          4096 Apr 10 11:53 memos
drwxr-xr-x    1 root     root         20480 Apr 10 11:54 node_modules
-rwxr-xr-x    1 root     root        230103 Apr 10 11:33 package-lock.json
-rwxr-xr-x    1 root     root           657 Apr 10 11:05 package.json
drwxr-xr-x    4 root     root          4096 Apr 10 11:53 spec
drwxr-xr-x    5 root     root          4096 Apr 10 11:53 src
-rwxr-xr-x    1 root     root        183766 Apr 10 11:05 yarn.lock
/app # cat Dockerfile
FROM node:12-alpine
RUN apk add --no-cache python g++ make
WORKDIR /app
COPY . .
RUN yarn install --production
CMD ["node", "src/index.js"]
/app # cd src/
/app/src # ls -l
total 16
-rwxr-xr-x    1 root     root           962 Apr 10 11:05 index.js
drwxr-xr-x    2 root     root          4096 Apr 10 11:53 persistence
drwxr-xr-x    2 root     root          4096 Apr 10 11:53 routes
drwxr-xr-x    4 root     root          4096 Apr 10 11:53 static
/app/src # ls -la
total 28
drwxr-xr-x    5 root     root          4096 Apr 10 11:53 .
drwxr-xr-x    1 root     root          4096 Apr 10 11:54 ..
-rwxr-xr-x    1 root     root           962 Apr 10 11:05 index.js
drwxr-xr-x    2 root     root          4096 Apr 10 11:53 persistence
drwxr-xr-x    2 root     root          4096 Apr 10 11:53 routes
drwxr-xr-x    4 root     root          4096 Apr 10 11:53 static
/app/src # cat index.js
const express = require('express');
const app = express();
const db = require('./persistence');
const getItems = require('./routes/getItems');
const addItem = require('./routes/addItem');
const updateItem = require('./routes/updateItem');
const deleteItem = require('./routes/deleteItem');

app.use(require('body-parser').json());
app.use(express.static(__dirname + '/static'));

app.get('/items', getItems);
app.post('/items', addItem);
app.put('/items/:id', updateItem);
app.delete('/items/:id', deleteItem);

db.init().then(() => {
    app.listen(3000, () => console.log('Listening on port 3000'));
}).catch((err) => {
    console.error(err);
    process.exit(1);
});

const gracefulShutdown = () => {
    db.teardown()
        .catch(() => {})
        .then(() => process.exit());
};

process.on('SIGINT', gracefulShutdown);
process.on('SIGTERM', gracefulShutdown);
process.on('SIGUSR2', gracefulShutdown); // Sent by nodemon
/app/src # cd..
/bin/sh: cd..: not found
/app/src # cd .
/app/src # cd ..
/app # ls -la
total 464
drwxr-xr-x    1 root     root          4096 Apr 10 11:54 .
drwxr-xr-x    1 root     root          4096 Apr 10 15:48 ..
-rwxr-xr-x    1 root     root           146 Apr 10 11:39 Dockerfile
drwxr-xr-x    2 root     root          4096 Apr 10 11:53 memos
drwxr-xr-x    1 root     root         20480 Apr 10 11:54 node_modules
-rwxr-xr-x    1 root     root        230103 Apr 10 11:33 package-lock.json
-rwxr-xr-x    1 root     root           657 Apr 10 11:05 package.json
drwxr-xr-x    4 root     root          4096 Apr 10 11:53 spec
drwxr-xr-x    5 root     root          4096 Apr 10 11:53 src
-rwxr-xr-x    1 root     root        183766 Apr 10 11:05 yarn.lock
/app # cd /
/ # pwd
/
/ # ls -la
total 84
drwxr-xr-x    1 root     root          4096 Apr 10 15:48 .
drwxr-xr-x    1 root     root          4096 Apr 10 15:48 ..
-rwxr-xr-x    1 root     root             0 Apr 10 15:48 .dockerenv
drwxr-xr-x    1 root     root          4096 Apr 10 11:54 app
drwxr-xr-x    1 root     root          4096 Apr  7 15:26 bin
drwxr-xr-x    5 root     root           340 Apr 10 15:48 dev
drwxr-xr-x    1 root     root          4096 Apr 10 15:48 etc
drwxr-xr-x    1 root     root          4096 Apr  7 15:26 home
drwxr-xr-x    1 root     root          4096 Apr  7 15:26 lib
drwxr-xr-x    5 root     root          4096 Mar 31 16:14 media
drwxr-xr-x    2 root     root          4096 Mar 31 16:14 mnt
drwxr-xr-x    1 root     root          4096 Apr  7 15:26 opt
dr-xr-xr-x  142 root     root             0 Apr 10 15:48 proc
drwx------    1 root     root          4096 Apr 10 17:44 root
drwxr-xr-x    2 root     root          4096 Mar 31 16:14 run
drwxr-xr-x    2 root     root          4096 Mar 31 16:14 sbin
drwxr-xr-x    2 root     root          4096 Mar 31 16:14 srv
dr-xr-xr-x   11 root     root             0 Apr 10 15:48 sys
drwxrwxrwt    1 root     root          4096 Apr 10 11:54 tmp
drwxr-xr-x    1 root     root          4096 Apr 10 11:53 usr
drwxr-xr-x    1 root     root          4096 Mar 31 16:14 var
/ # cd app
/app # ls -la
total 464
drwxr-xr-x    1 root     root          4096 Apr 10 11:54 .
drwxr-xr-x    1 root     root          4096 Apr 10 15:48 ..
-rwxr-xr-x    1 root     root           146 Apr 10 11:39 Dockerfile
drwxr-xr-x    2 root     root          4096 Apr 10 11:53 memos
drwxr-xr-x    1 root     root         20480 Apr 10 11:54 node_modules
-rwxr-xr-x    1 root     root        230103 Apr 10 11:33 package-lock.json
-rwxr-xr-x    1 root     root           657 Apr 10 11:05 package.json
drwxr-xr-x    4 root     root          4096 Apr 10 11:53 spec
drwxr-xr-x    5 root     root          4096 Apr 10 11:53 src
-rwxr-xr-x    1 root     root        183766 Apr 10 11:05 yarn.lock
/app #